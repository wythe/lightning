LIGHTNING-INVOICE(7)
====================
:doctype: manpage

NAME
----
lightning-invoice - Command for requesting payments.

SYNOPSIS
--------
*invoice* 'msatoshi' 'label' 'description' ['expiry'] ['fallbacks'] ['preimage']

DESCRIPTION
-----------
The *invoice* RPC command creates a payment request.  It returns a unique token
which another lightning daemon can use to make payment.

'msatoshi' is the expected payment amount in milli-satoshi.  It can be the
string "any" which creates an invoice that can be paid with any amount.

The 'label' must be a unique string or number. A number is treated as a
string, so "01" is different from "1".  The 'label' is never revealed to other
nodes on the lightning network, but it can be used to query the status
of this invoice.

The 'description' is a short description of purpose of payment;
e.g. '1 cup of coffee'. This value is encoded into the BOLT11 invoice
and is viewable by any node you send this invoice to.  It must be
UTF-8 and cannot use '\u' JSON escape codes.

The 'expiry' is optionally the number of seconds the invoice is valid for.
If no value is provided the default of 3600 (1 Hour) is used.

The 'fallbacks' array is one or more fallback addresses to include in
the invoice (in order from most-preferred to least).  Note that these
arrays are not currently tracked to fulfill the invoice.

The 'preimage' is a 64-digit hex string to be used as the payment preimage
for the created invoice.  If unspecified, 'lightningd' will by default generate
a secure pseudorandom preimage seeded from an appropriate entropy source on
your system.

This parameter is an advanced feature intended for use with cutting-edge
cryptographic protocols and should not be used unless explicitly needed.

*IMPORTANT*: If you specify the 'preimage' then it is your responsibility to:

1. Use a secure pseudorandom generator seeded with sufficient entropy
2. Keep the preimage secret

RETURN VALUE
------------

On success, a hash is returned as 'payment_hash' to be given to the payer,
and the 'expiry_time' as a UNIX timestamp.
It also returns a BOLT11 invoice as 'bolt11' to be given to the
payer.
On failure, an error is returned and no invoice is created.  If the
lightning process fails before responding, the caller should use
lightning-listinvoices(7) to query whether this invoice was created or not.

ERRORS
------
The following error codes may occur:

* -1. Catchall nonspecific error.
* 900. An invoice with the given 'label' already exists.
* 901. An invoice with the given 'preimage' already exists.

AUTHOR
------
Rusty Russell <rusty@rustcorp.com.au> is mainly responsible.

SEE ALSO
--------
lightning-listinvoices(7), lightning-delinvoice(7),
lightning-getroute(7), lightning-sendpay(7).

RESOURCES
---------
Main web site: https://github.com/ElementsProject/lightning
